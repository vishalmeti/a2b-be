# Generated by Django 5.1.7 on 2025-03-30 08:28

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('items', '0001_initial'),
        ('users', '0003_userprofile_profile_picture_s3_key'),
    ]

    operations = [
        migrations.CreateModel(
            name='BorrowingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(db_index=True, help_text='Requested borrow start date')),
                ('end_date', models.DateField(db_index=True, help_text='Requested borrow end date')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Lender Approval'), ('ACCEPTED', 'Accepted by Lender'), ('DECLINED', 'Declined by Lender'), ('CANCELLED_BORROWER', 'Cancelled by Borrower'), ('CANCELLED_LENDER', 'Cancelled by Lender'), ('PICKED_UP', 'Item Picked Up'), ('RETURNED', 'Item Returned by Borrower'), ('COMPLETED', 'Completed')], db_index=True, default='PENDING', help_text='The current status of the borrowing request', max_length=20)),
                ('borrower_message', models.TextField(blank=True, help_text='Optional message from borrower with the initial request')),
                ('lender_response_message', models.TextField(blank=True, help_text='Optional message from lender when accepting/declining')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='Timestamp when lender Accepted or Declined', null=True)),
                ('pickup_confirmed_at', models.DateTimeField(blank=True, help_text='Timestamp when borrower confirmed pickup', null=True)),
                ('return_initiated_at', models.DateTimeField(blank=True, help_text='Timestamp when borrower marked as returned', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp when lender confirmed return (transaction completed)', null=True)),
                ('borrower_profile', models.ForeignKey(help_text='The user profile of the person requesting the item', on_delete=django.db.models.deletion.PROTECT, related_name='borrow_requests', to='users.userprofile')),
                ('item', models.ForeignKey(help_text='The item being requested for borrowing', on_delete=django.db.models.deletion.PROTECT, related_name='requests', to='items.item')),
                ('lender_profile', models.ForeignKey(help_text='The user profile of the item owner (lender)', on_delete=django.db.models.deletion.PROTECT, related_name='lend_requests', to='users.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_for_lender', models.PositiveSmallIntegerField(blank=True, help_text="Borrower's rating of the lender (1-5 Stars)", null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment_for_lender', models.TextField(blank=True, help_text="Borrower's comments about their interaction with the lender")),
                ('borrower_review_submitted_at', models.DateTimeField(blank=True, null=True)),
                ('rating_for_borrower', models.PositiveSmallIntegerField(blank=True, help_text="Lender's rating of the borrower (1-5 Stars)", null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment_for_borrower', models.TextField(blank=True, help_text="Lender's comments about their interaction with the borrower")),
                ('rating_for_item_condition_on_return', models.PositiveSmallIntegerField(blank=True, help_text="Lender's rating of the item's condition upon return (1-5 Stars)", null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment_on_item_condition', models.TextField(blank=True, help_text="Lender's comments about the item's condition when returned")),
                ('lender_review_submitted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('borrowing_request', models.OneToOneField(help_text='The completed borrowing request being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='review', to='transactions.borrowingrequest')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
